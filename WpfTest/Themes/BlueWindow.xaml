<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
    </ResourceDictionary.MergedDictionaries>

    <RadialGradientBrush x:Key="BlueWindow.Background" GradientOrigin="0.5,0" Center="0.5,0" RadiusX="0.5" RadiusY="1" SpreadMethod="Pad">
        <GradientStop Color="#FF000060" Offset="0"/>
        <GradientStop Color="#FF00001E" Offset="1"/>
    </RadialGradientBrush>

    <Style x:Key="BlueWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="Background" Value="{StaticResource BlueWindow.Background}"/>
        <!--<Style.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <BeginStoryboard.Storyboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.Target="{Binding ElementName=BackgroundGradientStop}"
                                             Storyboard.TargetProperty="Offset"
                                             From="0" Duration="0:0:3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard.Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>-->
    </Style>

    <ControlTemplate x:Key="WhiteBorderButtonTemplate" TargetType="{x:Type Button}">
        <Border Name="PART_Border"
                Margin="{TemplateBinding Margin}" 
                Padding="{TemplateBinding Padding}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}"
                CornerRadius="5">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Border" Property="Opacity" Value="0.5"/>
            </Trigger>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="Red"/>
            </MultiTrigger>-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="WhiteSmoke"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="Blue"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WhiteBorderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#32000000"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Template" Value="{StaticResource WhiteBorderButtonTemplate}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Control">
                                <Rectangle Name="Rect"  StrokeThickness="1"
                                           RadiusX="5" RadiusY="5"
                                           Stroke="White"
                                           SnapsToDevicePixels="true">
                                    <Rectangle.StrokeDashArray>
                                        <DoubleCollection>3 3</DoubleCollection>
                                    </Rectangle.StrokeDashArray>
                                    <Rectangle.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard>
                                                <BeginStoryboard.Storyboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Rect"
                                                                                       Storyboard.TargetProperty="StrokeDashArray"
                                                                                       RepeatBehavior="Forever">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <DoubleCollection>3 3</DoubleCollection>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <DoubleCollection>2 3 1</DoubleCollection>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.4">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <DoubleCollection>1 3 2</DoubleCollection>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.6">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <DoubleCollection>0 3 3</DoubleCollection>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard.Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Rectangle.Triggers>
                                </Rectangle>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource WhiteBorderButtonStyle}"/>
</ResourceDictionary>